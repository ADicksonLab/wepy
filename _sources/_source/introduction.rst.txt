Introduction & Features
=======================

There is an academic paper describing various aspects of the design and
usage of ``wepy``:

-  `Wepy: A Flexible Software Framework for Simulating Rare Events with
   Weighted Ensemble
   Resampling <https://doi.org/10.1021/acsomega.0c03892>`__

Weighted Ensemble (WE)
----------------------

The weighted ensemble algorithm (WE) is a strategy for simulating rare
or long-timescale events in stochastic systems (`Huber,
1996 <http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1224912/>`__). It
creates several parallel simulations called walkers with individual
weights corresponding to their likelihood. Throughout the simulation,
walkers that exhibit behaviors or reach states that are of particular
relevance or significance to the objectives of the simulation are
cloned. To compensate for cloning, and to manage the computational
expense of the simulation, some of the remaining walkers are merged.
Cloning and merging are together referred to as "resampling". It has
been `previously
shown <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2830257/>`__ that WE
resampling is "statistically exact", in that it does not change the
expectation values of the weights at any point in space.

Features of Wepy
----------------

-  State of the art WE resamplers: WExplore (`Dickson,
   2014 <http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4404516/>`__) and
   REVO (`Donyapour,
   2019 <https://pubs.aip.org/aip/jcp/article/150/24/244112/198013/REVO-Resampling-of-ensembles-by-variation>`__)
-  Fast GPU-enabled molecular dynamics via OpenMM (`Eastman,
   2013 <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3539733/>`__)
-  Purpose built HDF5 storage format for WE data with extensive API:
   ``WepyHDF5``
-  Analysis routines for:

   -  free energy profiles
   -  rate calculations
   -  computing trajectory observables
   -  extracting linear trajectories from clone-merge trees
   -  aggregating multiple runs

-  Expert friendly: Fully-featured framework for building and
   customizing simulations for exactly what you need.
-  Leverage the entire python ecosystem.
-  No *ad hoc* configuration files, everything is python.

Once you have wepy :any:`installed <installation>` you can check out the
:any:`quickstart <quick_start/index>` to get a rough idea of how it
works.

Then you can head on to the :any:`tutorials <tutorials/index>` or
execute the
`examples <https://github.com/ADicksonLab/wepy/tree/master/info/examples>`__.

Contributed wepy libraries and other useful resources
-----------------------------------------------------

Here is a list of packages that are not in the main Wepy repository but
may be of interest to users of Wepy.

They are:

`geomm <https://github.com/ADicksonLab/geomm>`__
   purely functional library for common numerical routines in
   computational biology and chemistry, with no dependency on specific
   file or topology formats.

`CSNAnalysis <https://github.com/ADicksonLab/CSNAnalysis>`__
   small library for aiding in the analysis of conformation state
   networks (CSNs) which can be generated from Wepy data.
